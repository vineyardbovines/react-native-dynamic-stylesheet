///
/// HybridNitroDeviceModuleSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "HybridNitroDeviceModuleSpec.hpp"

namespace margelo::nitro::stylesheet {

  void HybridNitroDeviceModuleSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridMethod("getDeviceTraits", &HybridNitroDeviceModuleSpec::getDeviceTraits);
      prototype.registerHybridMethod("runHaptic", &HybridNitroDeviceModuleSpec::runHaptic);
      prototype.registerHybridMethod("getColorScheme", &HybridNitroDeviceModuleSpec::getColorScheme);
      prototype.registerHybridMethod("getScreenDimensions", &HybridNitroDeviceModuleSpec::getScreenDimensions);
      prototype.registerHybridMethod("getContentSizeCategory", &HybridNitroDeviceModuleSpec::getContentSizeCategory);
      prototype.registerHybridMethod("getScreenInsets", &HybridNitroDeviceModuleSpec::getScreenInsets);
      prototype.registerHybridMethod("getDisplayScale", &HybridNitroDeviceModuleSpec::getDisplayScale);
      prototype.registerHybridMethod("getFontScale", &HybridNitroDeviceModuleSpec::getFontScale);
      prototype.registerHybridMethod("getIsRTL", &HybridNitroDeviceModuleSpec::getIsRTL);
      prototype.registerHybridMethod("getScreenOrientation", &HybridNitroDeviceModuleSpec::getScreenOrientation);
      prototype.registerHybridMethod("getPixelRatio", &HybridNitroDeviceModuleSpec::getPixelRatio);
    });
  }

} // namespace margelo::nitro::stylesheet
