///
/// HybridNitroAccessibilityModuleSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "HybridNitroAccessibilityModuleSpec.hpp"

namespace margelo::nitro::stylesheet {

  void HybridNitroAccessibilityModuleSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridMethod("removeListeners", &HybridNitroAccessibilityModuleSpec::removeListeners);
      prototype.registerHybridMethod("getAllSettings", &HybridNitroAccessibilityModuleSpec::getAllSettings);
      prototype.registerHybridMethod("getIsReduceMotionEnabled", &HybridNitroAccessibilityModuleSpec::getIsReduceMotionEnabled);
      prototype.registerHybridMethod("addReduceMotionListener", &HybridNitroAccessibilityModuleSpec::addReduceMotionListener);
      prototype.registerHybridMethod("getIsReduceTransparencyEnabled", &HybridNitroAccessibilityModuleSpec::getIsReduceTransparencyEnabled);
      prototype.registerHybridMethod("addReduceTransparencyListener", &HybridNitroAccessibilityModuleSpec::addReduceTransparencyListener);
      prototype.registerHybridMethod("getIsDifferentiateWithoutColorEnabled", &HybridNitroAccessibilityModuleSpec::getIsDifferentiateWithoutColorEnabled);
      prototype.registerHybridMethod("addDifferentiateWithoutColorListener", &HybridNitroAccessibilityModuleSpec::addDifferentiateWithoutColorListener);
      prototype.registerHybridMethod("getIsInvertColorsEnabled", &HybridNitroAccessibilityModuleSpec::getIsInvertColorsEnabled);
      prototype.registerHybridMethod("addInvertColorsListener", &HybridNitroAccessibilityModuleSpec::addInvertColorsListener);
      prototype.registerHybridMethod("getIsShowButtonShapesEnabled", &HybridNitroAccessibilityModuleSpec::getIsShowButtonShapesEnabled);
      prototype.registerHybridMethod("addShowButtonShapesListener", &HybridNitroAccessibilityModuleSpec::addShowButtonShapesListener);
      prototype.registerHybridMethod("getIsBoldTextEnabled", &HybridNitroAccessibilityModuleSpec::getIsBoldTextEnabled);
      prototype.registerHybridMethod("addBoldTextListener", &HybridNitroAccessibilityModuleSpec::addBoldTextListener);
      prototype.registerHybridMethod("getIsVoiceOverEnabled", &HybridNitroAccessibilityModuleSpec::getIsVoiceOverEnabled);
      prototype.registerHybridMethod("addVoiceOverListener", &HybridNitroAccessibilityModuleSpec::addVoiceOverListener);
      prototype.registerHybridMethod("getIsSwitchControlEnabled", &HybridNitroAccessibilityModuleSpec::getIsSwitchControlEnabled);
      prototype.registerHybridMethod("addSwitchControlListener", &HybridNitroAccessibilityModuleSpec::addSwitchControlListener);
      prototype.registerHybridMethod("getIsVideoAutoplayEnabled", &HybridNitroAccessibilityModuleSpec::getIsVideoAutoplayEnabled);
      prototype.registerHybridMethod("addVideoAutoplayListener", &HybridNitroAccessibilityModuleSpec::addVideoAutoplayListener);
      prototype.registerHybridMethod("getIsClosedCaptioningEnabled", &HybridNitroAccessibilityModuleSpec::getIsClosedCaptioningEnabled);
      prototype.registerHybridMethod("addClosedCaptioningListener", &HybridNitroAccessibilityModuleSpec::addClosedCaptioningListener);
      prototype.registerHybridMethod("getPrefersCrossFadeTransitionsEnabled", &HybridNitroAccessibilityModuleSpec::getPrefersCrossFadeTransitionsEnabled);
      prototype.registerHybridMethod("addPrefersCrossFadeTransitionsListener", &HybridNitroAccessibilityModuleSpec::addPrefersCrossFadeTransitionsListener);
      prototype.registerHybridMethod("getIsGrayscaleEnabled", &HybridNitroAccessibilityModuleSpec::getIsGrayscaleEnabled);
      prototype.registerHybridMethod("addGrayscaleListener", &HybridNitroAccessibilityModuleSpec::addGrayscaleListener);
      prototype.registerHybridMethod("getIsDarkerSystemColorsEnabled", &HybridNitroAccessibilityModuleSpec::getIsDarkerSystemColorsEnabled);
      prototype.registerHybridMethod("addDarkerSystemColorsListener", &HybridNitroAccessibilityModuleSpec::addDarkerSystemColorsListener);
      prototype.registerHybridMethod("getIsMonoAudioEnabled", &HybridNitroAccessibilityModuleSpec::getIsMonoAudioEnabled);
      prototype.registerHybridMethod("addMonoAudioListener", &HybridNitroAccessibilityModuleSpec::addMonoAudioListener);
      prototype.registerHybridMethod("getIsShakeToUndoEnabled", &HybridNitroAccessibilityModuleSpec::getIsShakeToUndoEnabled);
      prototype.registerHybridMethod("addShakeToUndoListener", &HybridNitroAccessibilityModuleSpec::addShakeToUndoListener);
      prototype.registerHybridMethod("getIsSpeakScreenEnabled", &HybridNitroAccessibilityModuleSpec::getIsSpeakScreenEnabled);
      prototype.registerHybridMethod("addSpeakScreenListener", &HybridNitroAccessibilityModuleSpec::addSpeakScreenListener);
      prototype.registerHybridMethod("getIsSpeakSelectionEnabled", &HybridNitroAccessibilityModuleSpec::getIsSpeakSelectionEnabled);
      prototype.registerHybridMethod("addSpeakSelectionListener", &HybridNitroAccessibilityModuleSpec::addSpeakSelectionListener);
      prototype.registerHybridMethod("getIsOnOffSwitchLabelsEnabled", &HybridNitroAccessibilityModuleSpec::getIsOnOffSwitchLabelsEnabled);
      prototype.registerHybridMethod("addOnOffSwitchLabelsListener", &HybridNitroAccessibilityModuleSpec::addOnOffSwitchLabelsListener);
    });
  }

} // namespace margelo::nitro::stylesheet
